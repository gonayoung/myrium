<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myrium.mapper.AdminBoardMapper">

	<resultMap id="boardMap" type="com.myrium.domain.BoardVO">
	    <id property="id" column="id" />
	    <result property="userId" column="user_id"/>
	    <result property="title" column="title"/>
	    <result property="content" column="content"/>
	    <result property="productId" column="product_id"/>
	    <result property="customerId" column="customer_id"/>
	    <result property="writeDate" column="write_date"/>
	    <result property="isAnswered" column="is_answered"/>
	    <result property="isDeleted" column="is_deleted"/>
	    <result property="createdAt" column="created_at"/>
	    <result property="createdBy" column="created_by"/>
	    <result property="updatedAt" column="updated_at"/>
	    <result property="updatedBy" column="updated_by"/>
	    <result property="replyCnt" column="reply_cnt"/>
	</resultMap>

	<select id="getList" resultMap="boardMap" >
	    SELECT id, user_id, title, content, customer_id, write_date,
	           is_answered, is_deleted, created_at, created_by,
	           updated_at, updated_by, reply_cnt
	    FROM board
	    WHERE id > 0 ORDER BY id DESC
	</select>

    <insert id="insert">
        INSERT INTO board (
            id, title, content, customer_id, user_id, write_date, created_at, created_by, is_answered, is_deleted, reply_cnt
        ) VALUES (
            board_seq.NEXTVAL, #{title}, #{content}, #{customerId}, #{userId}, SYSDATE, SYSDATE, #{createdBy}, 0, 0, 0
        )
    </insert>

    <insert id="insertSelectKey">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT board_seq.NEXTVAL FROM dual
        </selectKey>
        INSERT INTO board (
            id, title, content, customer_id, user_id, write_date, created_at, created_by, is_answered, is_deleted, reply_cnt, product_id
        ) VALUES (
            #{id}, #{title}, #{content}, #{customerId}, #{userId}, SYSDATE, SYSDATE, #{createdBy}, 0, 0, 0, #{productId}
        )
    </insert>

	<select id="read" resultMap="boardMap">
	    SELECT id, user_id, title, content, customer_id, write_date,
	           is_answered, is_deleted, created_at, created_by,
	           updated_at, updated_by, reply_cnt
	    FROM board
	    WHERE id = #{id}
	</select>

	<!-- 하드(영구) 삭제 -->
    <delete id="harddel">
        DELETE FROM board WHERE id = #{id}
    </delete>
    
    <!-- 소프트 삭제 -->
    <update id="softdel">
	    UPDATE board
	    SET is_deleted = 1
	    WHERE id = #{id}
	</update>
	
    <!-- 복구 -->
    <update id="restore">
	    UPDATE board
	    SET is_deleted = 0
	    WHERE id = #{id}
	</update>

    <update id="update">
        UPDATE board
        SET title = #{title},
            content = #{content},
            updated_at = SYSDATE,
            updated_by = #{updatedBy}
        WHERE id = #{id}
    </update>

    <!-- 페이징용 검색 필터 -->
    <sql id="criterial">
        <trim prefix="(" suffix=") AND" prefixOverrides="OR">
            <foreach item='type' collection="cri.typeArr">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title LIKE '%' || #{cri.keyword} || '%'
                        </when>
                        <when test="type == 'C'.toString()">
                            content LIKE '%' || #{cri.keyword} || '%'
                        </when>
                        <when test="type == 'W'.toString()">
                            customer_id LIKE '%' || #{cri.keyword} || '%'
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

	<select id="getListWithPaging" resultMap="boardMap" >
	  <![CDATA[
	  SELECT id, user_id, title, content, customer_id, write_date,
	         is_answered, is_deleted, created_at, created_by,
	         updated_at, updated_by, reply_cnt
	  FROM (
	      SELECT /*+INDEX_DESC(board pk_board) */ 
	             ROWNUM rn, id, user_id, title, content, customer_id, write_date,
	             is_answered, is_deleted, created_at, created_by,
	             updated_at, updated_by, reply_cnt
	      FROM board
	      WHERE
	  ]]>
	  
	  <include refid="criterial"/>
	
	  <![CDATA[
	      ROWNUM <= #{cri.pageNum} * #{cri.amount}
	  ) WHERE rn > (#{cri.pageNum} - 1) * #{cri.amount}
	  ]]>
	  
	  <!-- isAdmin 파라미터가 false일 때만 is_deleted 필터 적용 -->
	  <if test="!isAdmin">
	    <![CDATA[
	    AND is_deleted = 0
	    ]]>
	  </if>
	</select>

	<select id="getTotalCount" resultType="int" >
	    SELECT COUNT(*)
	    FROM board
	    WHERE id > 0
	    <if test="!isAdmin">
	        AND is_deleted = 0
	    </if>
	</select>

    <update id="updateReplyCnt">
        UPDATE board SET reply_cnt = reply_cnt + #{amount} WHERE id = #{id}
    </update>

	<select id="getBoardList" resultMap="boardMap">
		SELECT * FROM board WHERE product_id = ${productId}
	</select>
</mapper>
